name: Test App Deployment

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

env:
  TERM: dumb
  MAX_HEAP_SIZE: 8g
  JVM_OPTS: -Xmx2048m
  GRADLE_OPTS: -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false
  FLAVOR_PROP_TESTING: flavor_testing.properties
  FLAVOR_PROP_STAGING: flavor_staging.properties
  FLAVOR_PROP_PROD: flavor_production.properties

jobs:
  run_micro_tests:
    name: Run Micro Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          ref: master

      - name: set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: setup testing as default env
        run: echo flavorPropertiesFileName=${{env.FLAVOR_PROP_TESTING}} > flavor.properties

      - name: Cat flavor.properties
        run: cat flavor.properties

      - name: Create key.properties with keystore password
        run: echo ${{secrets.ANDROID_KEY_PROPERTIES}} | base64 --decode > key.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run Micro Tests
        run: ./gradlew clean testDebug
  generate_apk:
    name: Generate APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          ref: master

      - name: set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: setup testing as default env
        run: echo flavorPropertiesFileName=${{env.FLAVOR_PROP_TESTING}} > flavor.properties

      - name: Cat flavor.properties
        run: cat flavor.properties

      - name: Create key.properties with keystore password
        run: echo ${{secrets.ANDROID_KEY_PROPERTIES}} | base64 --decode > key.properties

      - name: Download Android Dependencies
        run: ./gradlew assembleDebug

      - name: Upload App APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Assemble App Instrumentation Tests
        run: ./gradlew assembleDebugAndroidTest

      - name: Upload App Test APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-androidTest
          path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk
  run_ui_tests_on_firebase_test_lab:
    name: Run UI Tests on Firebase Test Lab
    needs: generate_apk
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Download App APK
        uses: actions/download-artifact@v3
        with:
          name: app-debug

      - name: Download App Test APK
        uses: actions/download-artifact@v3
        with:
          name: app-debug-androidTest

      - name: Print  Directory Structure After Download
        run: find . | sed -e "s/[^-][^\/]*\//  |/g" -e "s/|\([^ ]\)/|-\1/"

      - name: Google Cloud SDK Authentication
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{secrets.GCP_CREDENTIALS}}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: List available devices
        run: gcloud firebase test android models list

      - name: Execute Instrumentation Tests on  Firebase Test Lab
        run: gcloud firebase test android run  --type instrumentation  --app app-debug.apk  --test app-debug-androidTest.apk  --device model=redfin,version=30
  bump_version:
    name: Bump Version for Deployment
    needs: [run_micro_tests, run_ui_tests_on_firebase_test_lab]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
          token: ${{secrets.GH_TOKEN}}

      - name: Bump version
        run: cd app && sh script_internal_version_bump.sh
  deploy_test_app_on_gpc:
    runs-on: ubuntu-latest
    needs: bump_version
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          ref: master

      - name: set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Cache Ruby Dependencies
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Download Ruby Dependencies
        run: bundle check || bundle install --path vendor/bundle

      - name: Update build tools
        run: (yes | sdkmanager "extras;android;m2repository" || true) && (yes | sdkmanager "extras;google;m2repository" || true)

      - name: Approve license for build tools
        run: yes | sdkmanager --licenses || true

      - name: setup testing as default env
        run: echo flavorPropertiesFileName=${{env.FLAVOR_PROP_TESTING}} > flavor.properties

      - name: Cat flavor.properties
        run: cat flavor.properties

      - name: Create key.properties with keystore password
        run: echo ${{secrets.ANDROID_KEY_PROPERTIES}} | base64 --decode > key.properties

      - name: Download Android Dependencies
        run: ./gradlew androidDependencies

      - name: Create Google PlayKey
        run: echo ${{secrets.GOOGLE_PLAY_KEY}} | base64 -d > ../json_key_file.json

      - name: Deploy to Playstore
        run: bundle exec fastlane deployTestApp

      - uses: actions/upload-artifact@v3
        with:
          name: aab
          path: app/build/outputs/bundle/release/
          retention-days: 1

      - uses: actions/upload-artifact@v3
        with:
          name: mapping
          path: app/build/outputs/mapping/release/
          retention-days: 1