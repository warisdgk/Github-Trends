plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

final def keystoreProperties = new Properties()
final def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

final def currentFlavorProperties = new Properties()
final def currentFlavorPropertiesFile = rootProject.file('flavor.properties')
currentFlavorProperties.load(new FileInputStream(currentFlavorPropertiesFile))

final def flavorProperties = new Properties()
final def flavorPropertiesFile = rootProject.file(currentFlavorProperties['flavorPropertiesFileName'])
flavorProperties.load(new FileInputStream(flavorPropertiesFile))

android {
    namespace 'mwaris.dev.githubtrends'
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId flavorProperties['applicationId']
        minSdk rootProject.minSdkVersion
        targetSdk rootProject.targetSdkVersion
        versionCode 7
        versionName "0.7"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "BASE_API_URL", "\"${flavorProperties['baseApiUrl']}\""
        versionNameSuffix flavorProperties['versionNameSuffix']
        manifestPlaceholders.appName = flavorProperties['appName']

        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        debug {
            keyAlias "androiddebugkey"
            keyPassword "android"
            storePassword "android"
            storeFile file("debug.keystore")

            v1SigningEnabled true
            v2SigningEnabled true
        }
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storePassword keystoreProperties['storePassword']
            storeFile file(keystoreProperties['storeFile'])

            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        buildConfig = true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }

    testOptions.unitTests.all{
        testLogging {
            events 'passed', 'failed', 'skipped', 'standardOut', 'standardError'
        }
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}